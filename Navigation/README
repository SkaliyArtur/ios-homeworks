Дипломное приложение по учебе в неология.

Описание: приложение позволяет запрашивать новости по ключевому слову и добавлять определённые новости в избранное. Реализовано для тёмной и светлой тем. Реализована локализация. Реализовано для iPad (какие-то элементы специально не растянуты до краёв, т.к. Становится не читаемым, по аналогии с инстраграмом)

Авторизация:
1) Если логин или пароль не заполнены - кнопка Log In будет не активна (на всякий случай стоит заглушка, если одно или оба поля не заполнены, но кнопка активна - выводить ошибку о том, что необходимо заполнить поля)
2) Для авторизации используется сервис Firebase - есть проявки на уже существующего пользователя, на валидность имейл (проверка маски), на пароль (проверка на количество символов)
3) Если пользователь не найден - будет предложено создать его с указанным  в соответствующих полях логином и паролем
4) После успешной авторизации попадаем в TabBar
5*) Биометрия сделана в качестве примера и не привязана к логину и паролю (значок меняется в зависимости от устройства, на котором запущено или совсем отсутствует, если нет биометрии)

Страница профиля
1) Есть кнопка выход (разлогиневаемся и возвращаемся на окно Логина)
2) Есть настройки (их не программировал, но сделал кастомные ячейки)
3) Есть строка для ввода и установки статуса (после переломана статус сбрасывается, т.к. не стал сохранять нигде, потому что аналогичный код для имени уже есть)
4) Имя пользователя (можно поменять через значок редактирования). После смены имени, оно сохраняется в Firebase и при следующем логине будет подтягиваться из БД
5) Аватар тоже можно добавить на странице редактирования, но он не сохраняется, т.к. Из-за старого Xcode не могу использовать методы работы с БД Firebase.Storage (но в теории знаю как это сделать)

Страница новостей
1) Ищет новости по слову (по умолчанию 10 новостей, т.к. Иначе для тестов Xcode не выдерживает)
2) Кнопка становится активна, только если поле поиска не пустое
3) После нажатия кнопки, происходит запрос на API сервис (url генерируется из ссылки на сервис, ключ (который зашифрован) и передаваемого текста)
4) отображается список новостей (картинки подгружаются по URL, не сохранясь на телефоне). Для корректного отображение используется кэш.
5) По нажатию на новость, открывается окно, где можно прочитать весь текст новости
6) По нажатию на звёздочку, новость добавляется в избранное (сохраняет в локальную БД вс>, кроме картинки, по ней сохраняется только URL)

Страница избранного
1) Можно так же посмотреть новость в полный рост нажатием на ячейку
2) удалить из избранного можно слайдом с право на лево
